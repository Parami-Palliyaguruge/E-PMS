rules_version = '2';

service cloud.firestore {
  match /databases/{database}/documents {
    // Check if user is authenticated
    function isAuthenticated() {
      return request.auth != null;
    }
    
    // Check if user is business owner
    function isBusinessOwner(businessId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/businesses/$(businessId)).data.ownerId == request.auth.uid;
    }

    // Check if user is admin
    function isBusinessAdmin(businessId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/businesses/$(businessId)/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/businesses/$(businessId)/users/$(request.auth.uid)).data.role == 'admin';
    }
    
    // Check if user is either owner or admin
    function isOwnerOrAdmin(businessId) {
      return isBusinessOwner(businessId) || isBusinessAdmin(businessId);
    }
    
    // Check if user is manager
    function isBusinessManager(businessId) {
      return isAuthenticated() && 
        exists(/databases/$(database)/documents/businesses/$(businessId)/users/$(request.auth.uid)) &&
        get(/databases/$(database)/documents/businesses/$(businessId)/users/$(request.auth.uid)).data.role == 'manager';
    }
    
    // Check if user is a member of business (any role)
    function isBusinessMember(businessId) {
      return isAuthenticated() && (
        isBusinessOwner(businessId) ||
        exists(/databases/$(database)/documents/businesses/$(businessId)/users/$(request.auth.uid))
      );
    }
    
    // Check for specific permissions
    function hasPermission(businessId, permission) {
      return isAuthenticated() && (
        isBusinessOwner(businessId) ||
        (
          exists(/databases/$(database)/documents/businesses/$(businessId)/users/$(request.auth.uid)) &&
          get(/databases/$(database)/documents/businesses/$(businessId)/users/$(request.auth.uid)).data.permissions[permission] == true
        )
      );
    }
    
    // Default rules
    match /{document=**} {
      allow read: if isAuthenticated();
      allow write: if false; // Default deny for writes
    }
    
    // User collection - more permissive for account creation
    match /users/{userId} {
      // Self access
      allow read, write: if isAuthenticated() && request.auth.uid == userId;
      
      // Anyone can create user records (needed for account creation)
      allow create: if isAuthenticated();
      
      // Business admins/managers can update users in their business
      allow update: if isAuthenticated() && 
        request.resource.data.businessId != null && 
        (isOwnerOrAdmin(request.resource.data.businessId) || isBusinessManager(request.resource.data.businessId));
      
      // Users' businesses subcollection
      match /businesses/{businessId} {
        // Self access to own business associations
        allow read, write: if isAuthenticated() && request.auth.uid == userId;
        
        // Business admins/owners can create/update business associations
        allow create, update: if isOwnerOrAdmin(businessId);
        
        // Business managers can create business associations (except for admin role)
        allow create: if isBusinessManager(businessId) && 
          request.resource.data.role != 'admin';
      }
    }
    
    // Business collection
    match /businesses/{businessId} {
      // Allow all authenticated users to read businesses
      allow read: if isAuthenticated();
      
      // Allow business creation by any authenticated user
      allow create: if isAuthenticated();
      
      // Allow updates by owner or admin
      allow update: if isOwnerOrAdmin(businessId);
      
      // Only owners can delete a business
      allow delete: if isBusinessOwner(businessId);
      
      // Business users subcollection - more permissive for user management
      match /users/{userId} {
        // Anyone in the business can read users
        allow read: if isBusinessMember(businessId);
        
        // Business owners and admins can manage all users
        allow create, update, delete: if isOwnerOrAdmin(businessId);
        
        // Managers can create/update users (except admins)
        allow create, update: if isBusinessManager(businessId) && 
          request.resource.data.role != 'admin';
      }
      
      // Data collections - business members can access
      match /items/{itemId} {
        allow read: if isBusinessMember(businessId);
        allow write: if isBusinessMember(businessId);
      }
      
      match /invoices/{invoiceId} {
        allow read: if isBusinessMember(businessId);
        allow write: if isBusinessMember(businessId);
      }
      
      match /purchaseOrders/{poId} {
        allow read: if isBusinessMember(businessId);
        allow write: if isBusinessMember(businessId);
      }
      
      match /suppliers/{supplierId} {
        allow read: if isBusinessMember(businessId);
        allow write: if isBusinessMember(businessId);
      }
      
      match /budgets/{budgetId} {
        allow read: if isBusinessMember(businessId);
        allow write: if isBusinessMember(businessId);
      }
      
      match /annualBudgets/{year} {
        allow read: if isBusinessMember(businessId);
        allow write: if isBusinessMember(businessId);
      }
      
      match /expenses/{expenseId} {
        allow read: if isBusinessMember(businessId);
        allow write: if isBusinessMember(businessId);
      }
    }
  }
}